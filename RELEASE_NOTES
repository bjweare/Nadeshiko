——— v 2.8.1 ——————————————————————————————————————————————————————————————————

Fixed a bug when Nadeshiko-mpv quit and caused some mother program quit too –
and that mother program might happen to be the one that holds user session
within a DE, – leading to an X crash.




——— v 2.8 ————————————————————————————————————————————————————————————————————
                                                             Nadeshiko-mpv 2.4
                                                  Nadeshiko-do-postponed 2.3.2

<h2 align="center">Summary of changes</h2>

### Configuration files

Program now have proper configuration directories: `metaconf` and `defconf`.
All configuration options are now **split** there on per-codec basis. The old
`exampleconf` directory is obsolete and removed. Splitting didn’t affect
user’s configuration files – each file remains a standalone preset.

 

### Reworked the audio subsystem

- Each audio codec now has **its own set of profiles.** So each of the
  bitrate-resolution profiles now links to a particular audio profile
  for every audio codec.
- Audio codecs have **tables of measured overhead** to prevent it.
- Nadeshiko **will try to fit better audio bitrate,** to reach
  [audio transparency](http://wiki.hydrogenaud.io/index.php?title=Transparency), if the source will be of high enough quality and
  there will be enough space in the file.
- Long clips may have better video quality when encoded with Opus,
  thanks to the lowered bitrate restrictions.

 

### New features

- Nadeshiko-mpv has new configuration options:
  - `quick_run` allows to skip GUI phase, which speeds up taking webms
     one after another. Recommended to use with `predictor=off` and `postpone`
     option enabled either in the config file or via a command line parameter.
  - `quick_run_preset` defines, which Nadeshiko preset should be used in the
    quick_run mode. May be empty, then defaults to `nadeshiko.rc.sh`. Doesn’t
    depend on `nadeshiko_presets` list.
  - `postpone` is now available as a configuration file option.

 

### Optimisations

- Reworked gathering of properties from the source video has increased speed,
  solved one bug and allowed to recreate the entire handling of audio streams.
  `xmlstarlet` became a dependency for all Nadeshiko scripts.
- Console messages are now more thorough and clear.
- Reworked handling of subtitles:
  - moved font extraction to the filter composition stage (after the calcula-
    tion of space and before the encode). In case when the video could not be
    encoded with any profile, this should save some time.
  - SubRip (.srt) and WebVTT (.vtt) subtitles do not require conversion
    any more.
- Built-in SubRip and WebVTT are encoded without extracting them.
  (The trick doesn’t work for ASS/SSA subtitles, because the “ass” filter
  cannot be given stream index – the shame!)
- Overshooting of the file size is now predicted and calculated based on a new
  unit of space: an equivalent of one second of playback (ESP). Basically a sum
  of audio and video bitrates.
- libvpx-vp9 codec is attuned for libvpx version 1.8.0. `--tune-content` option
  now uses value `2`, which stands for “film”. This is a measure for the exces-
  sive blurriness and the undershooting that appeared in the latest version.

 

### Bugs fixed

- Vorbis codec is stabilised and shouldn’t blow files any more.
- Logging `tee` processes will not hang any more.
- Fixed a bash segfault in Nadeshiko, that caused Nadeshiko-mpv to silently
  quit after encoding and made it neither show a notification nor play the
  encoded file.
- External audio tracks are now allowed.
- Font extraction now works for everything, that FFmpeg can read,
  not only for matroska. Removed dependency on mkvtoolnix.
- Fixed a crash during an audio property retrieving with ffprobe.
- Reduced excessive verbosity of several ffmpeg commands during initial checks.
- Fixed the text of some error messages to be more clear.
- libvpx-vp9 level now uses 4.1 instead of non-existing 4.2.

 

### New and updated wiki articles

[Configuration files](https://git.io/fjz6l)
Under the hood:
- [Sound](https://git.io/fjz64)
- [Overhead prediction](https://git.io/fjENw)
Tests:
- [Muxing overhead](https://git.io/fjEEW) – The aim is to determine a proper
  algorithm, that would be able to predict muxing overhead and would help to
  avoid occasional overshooting or at least reduce the times, when a re-encode
  is needed.
- [Audio codecs. Encoding to size](https://git.io/fjz6B) – With introduction
  of the audio codec bitrate profiles it became reasonable to check, how pre-
  cise the codecs are at distributing the bitrate. `Audio_transcode.sh` was
  written specifically to measure that precision.

 

<h2 align="center">Details</h2>

<details>
<summary>About metaconf and defconf</summary>
<pre>
  `Metaconf`: what has become metaconf directory was either parts of the
     main scripts, the encoding modules or their configuration files.
  The purpose of this directory is to hold developer’s configuration set-
    tings and hints, that are required for the operation of Nadeshiko, but
    do not comprise an object of interest for the regular users. Now user
    config files became significantly shorter.
  Separating meta configuration into a separate space has made it transpa-
    rent for Nadeshiko-mpv to load Nadeshiko presets. (Before that the
    code in Nadeshiko-mpv had to a certain extent duplicate Nadeshiko’s.)
  
  `Defconf`: formerly known as example.*.rc.sh files. The differences between
  the old configuration and the new are few:
    - codec-specific configuration parts were taken into their respective
      configuration files, what made the main config file shrink a lot;
    - now only the main configuration file (the one with common options
      like the ffmpeg_vcodec, max_size_*, subs, audio…) is copied as the
      example.nadeshiko.rc.sh. Nadeshiko-mpv and Nadeshiko-do-postponed
      have main configuration files too, and examples are too copied
      to user’s CONFDIR.
</pre> 
See also [Configuration files](https://git.io/fjz6l) on the wiki.
</details>

<details>
<summary>Audio subsystem</summary>
<pre>
Reworked Audio encoding subsystem
  libopus, libvorbis, libfdk_aac, aac, libmp3lame, eac3 (new!), ac3 (new!)
  
  How it worked before
  
  All audio codecs used the same bitrates, which were specified one per
    bitrate-resolution profile: one for 1080p, one for 720p and so on. The de-
    fault bitrates were aligned close to the level of libvorbis. Working with
    audio was pretty generic and not taking effort to find idiosyncrasy with
    each audio codec.
  
  What this update changed
  
  - now each audio codec has its own configuration file, in it – own list
    of profiles, that determine a set of usable bitrates.
        | A set, because unlike with video codecs, the bitrate often cannot
        | be specified simply as a random value between X and Y, but *has* to
        | be chosen from a set of predefined values.
    In each set these is a “optimal” bitrate, “lowest usable” bitrate
    and “reaching audio transparency”. Between those points there are gradual
    steps (depending on the codec), and Nadeshiko will choose appropriate
    audio profile based on the situation.
  
    In the human language: it is a long 360p video? Bitrate will be reduced
    to the lowest possible; it is a 1080p that would use only 15 MiB of 20 MiB
    allowed? Then the bitrates higher than default should be tried.
 
    - The source audio track must be of a higher quality than the one Nade-
      shiko is going to encode the file. If your sources are lossless (e.g.
      FLAC) then the attempt to encode with a higher audio bitrate is guaran-
      teed. If your sources are lossy (AC3 or AAC for example), then the
      track bitrate must be higher than what Nadeshiko would attempt to do
      encoding with.
      - mind, that the reported bitrate for the source file may specify the
        audio track bitrate for all the channels – often 6 – while Nadeshiko
        always re-encodes for 2 channels and to compare bitrates converts
        multichannel bitrate to 2-channel by the formula on FFmpeg wiki:
           
          stereo bitrate = X channels bitrate ÷ ( X channels / 2 channels).
  
  - Longer videos will have better quality with Opus.
    Explanation: on longer videos the resolution gows down, so the video track
    occupies less space and becomes comparable to audio track in the space
    that it needs. Hence reducing audio – within sensible bounds – frees a sig-
    nificant amount of space and lets the video codec to use it for the video
    track, what improves the quality of the picture.
  
    Medium efficiency range codecs like Vorbis and AAC won’t provide this
    extra like Opus.
  
    Low efficiency range codecs (libmp3lame, eac3, ac3) now have higher requi-
    rements to allocation space for the audio track. But they are merely backup
    choices.
</pre>
See also [Sound](https://git.io/fjz64) on the wiki.
</details>

<details>
<summary>Transition of the old configuration options to new</summary>
<pre>
 
In nadeshiko.rc.sh
——————————————————
   
    libvpx_*  →  libvpx_vp9_*
  
    ffmpeg_pix_fmt → libx264_pix_fmt,
                     libvpx_vp9_pix_fmt.
  
    container_own_size_pct → webm_space_reserved_frames_to_esp,
                             mp4_space_reserved_frames_to_esp
  
    minimal_bitrate_pct → libx264_minimal_bitrate_pct,
                          libvpx_vp9_minimal_bitrate_pct.
  
    bitres_profile_NNNNp[audio_desired_bitrate]
        →  bitres_profile_NNNNp[libopus_profile] + libopus_profiles
           bitres_profile_NNNNp[libvorbis_profile] + libvorbis_profiles
           bitres_profile_NNNNp[libfdk_aac_profile] + libfdk_aac_profiles
           bitres_profile_NNNNp[aac_profile] + aac_profiles
           bitres_profile_NNNNp[libmp3lame_profile] + libmp3lame_profiles
           bitres_profile_NNNNp[eac3_profile] + eac3_profiles
           bitres_profile_NNNNp[ac3_profile] + ac3_profiles
  
    codec_names_as_formats
        → vcodec_name_as_formats_libx264
          vcodec_name_as_formats_libvpx_vp9
          acodec_name_as_formats_libopus
          acodec_name_as_formats_libvorbis
          acodec_name_as_formats_libfdk_aac
          acodec_name_as_formats_aac
          acodec_name_as_formats_libmp3lame
          acodec_name_as_formats_eac3
          acodec_name_as_formats_ac3
  
    can_be_used_together → libx264_muxing_sets
                           libvpx_vp9_muxing_sets
                           ffmpeg_muxers
  
  
  
In nadeshiko-mpv.rc.sh
——————————————————————
  
    nadeshiko_presets[default]='nadeshiko.rc.sh'
        → removed (may be set, but not obligatory any more)

</pre>
</details>




——— v 2.7 ————————————————————————————————————————————————————————————————————
                                                          Nadeshiko-mpv 2.3.19
                                                  Nadeshiko-do-postponed 2.3.1

1. Updated error handling lib
   - covered more cases, when the logging processes might keep hanging
     in memory, now they’d be forcefully killed in most bad cases.
   - improved call trace verbosity.

2. Updated messaging lib
   - Now message functions can be called safely in subshells: their output
     won’t be grabbed along with the regular output to stdout or stderr.
     This allowed to remove a bunch of in place redirections.
   - New functions for header messages made the code cleaner.


#### Nadeshiko

3. A direct check on ffmpeg encoders fixes #17.

4. Split the config option `$ffmpeg` into two options:
   - `$ffmpeg` to specify the calling name (or a custom path) to the ffmpeg
     binary. Default value is `'ffmpeg'`.
   - `$ffmpeg_input_options` is an array of custom options, that can be set
    for the input file. Default value is empty. Formerly used options
    `-v error  -nostdin` are now hardcoded into encoding modules (as they
    are obligatory anyway).
   Config file update is recommended, but not necessary.

#### Nadeshiko-mpv

5. Lifted the restriction on running Nadeshiko-mpv at the same time
   with Nadeshiko-do-postponed – now nothing prevents those to run
   simultaneously.

#### Nadeshiko-do-postponed

6. **Bugfix:** missing desktop messages are now shown as usual.




——— v 2.6 ————————————————————————————————————————————————————————————————————
                                                          Nadeshiko-mpv 2.3.18
                                                    Nadeshiko-do-postponed 2.3
1. Update to Bahelite 2.17
   - **bugfix:** now Nadeshiko-mpv and Nadeshiko-do-postponed fully control
     the verbosity of the backend: log, console and desktop messages separa-
     tely, and the backend desktop messages are now fully disabled. (Before
     that in certain cases that wasn’t possible to show only the frontend
     message and the message from backend also had to be shown.)
   - **improved logging:** thanks to the new verbosity levels it is possible
     to gather logs while disabling output to console, gather xtrace to a se-
     parate file and more.
   - automatic killing of the logging “tee” processes is disabled, as that
     caused signals not reaching the main script. Probably because of the
     reworked verbosity levels and redirections. The “tee” processes are
     all closing nicely and immediately, no delay was observed between
     the end of the program and the exiting of all processes in the group.
   - reduced the number of functions, that are exported by default. Should
     make subshells a little faster.

2. **New config option** in Nadeshiko-do-postponed allows to change, how much
   messages Nadeshiko (the backend) will send to desktop. The option name is
   `nadeshiko_desktop_notifications` and it takes one of the following values:
   “none” – Nadeshiko (the backend) will not send any desktop notifications.
           (But Nadeshiko-do-postponed will still inform you, when all jobs
            would be done.)
   “error” – Send a desktop notification, only when a video wasn’t encoded
             successfully.
   “all” – The normal behaviour, each time a video is encoded, a message
           is sent. This allows to watch it as soon as it is ready.

3. Bugfix in Nadeshiko-do-postponed: fix the bright colour not being stopped
   after reporting a job “Complete”.

4. Reduced the number of subshell calls in Nadeshiko-mpv. Should make it
   a little faster.

5. Nadeshiko-mpv code is now split into modules.




——— v 2.5.12 —————————————————————————————————————————————————————————————————
                                                          Nadeshiko-mpv 2.3.17
                                                 Nadeshiko-do-postponed 2.2.13

1. Update to Bahelite-2.16
   - **improved stability:** now Nadeshiko will run from within Nadeshiko-mpv
     in an isolated and cleaned environment.
   - Nadeshiko-mpv log will now include the log of the backend in all cases.
     (Previously Nadeshiko-mpv included the log only in case of an error,
     and not when running encode normally in the present time, without post-
     poning.)

     If Nadeshiko is chainloaded from Nadeshiko-mpv, it will now use the
     parent script’s log file and will not create its own.

   - Nadeshiko-do-postponed now runs backend in a subdirectory, which allows
     to keep all the logs in case of a failure. (Before that, only the Nade-
     shiko log was copied and nothing else.) In case of a failure, the job
     file will be moved to failed/ together with that subdirectory.
     For example:
              job file    -->  “some video file.sf4fSETf.sh”
                                                ^^^^^^^^-------- Job ID
              job logdir  -->  “sf4fSETf.log”

2. **Bugfix** in the time_functions and gather_file_info libraries: now that
   the functions can call err() safely even when used within a subshell
   (since Nadeshiko-2.5.7), the warnings there can finally become critical
   errors as they should be.

3. **Improvement** in Nadeshiko-do-postponed: it will now output the status
   of a running job to console in a pretty format (“Complete” or “Failed”
   and also the number of the current job in the list, e.g. “1/15”).

4. **Bugfix** in Nadeshiko-mpv: due to limitations of data export, the order
   of Time1 and Time2 was checked up to seconds. This might have lead to
   an incorrect order, if the times would both belong to one second. With the
   improved precision the timestamps are now checked up to the milliseconds,
   as it should be.

5. **Improvement** in Nadeshiko-mpv: human-readable times in the postponed
   job file name and in the parameters to Nadeshiko within it. Changing
   timestamps to format 12:34:56.789 will make it easier to collate a webm
   (or mp4) with its job file by time – previously Nadeshiko-mpv used time-
   stamps in format 1234.567.

6. Increased durations for two messages, that Nadeshiko-mpv sends to player:
   - the first launch of predictor (if it’s enabled), that also does scene
     complexity test – message duration changed from 10 seconds to 20 minutes.

     On long video spans (5:00+) the test might take 40–60 seconds so when
     message disappeared too early that left the user without a feedback
     and created a wrong impression, that Nadeshiko lost control over ffmpeg.

   - The duration of the “Building GUI” message was increased from one second
     to three.

7. `mpv_pid` now defined earlier in order for the trap on EXIT to be able
   to clean the mpv screen of whatever messages might be left after
   Nadeshiko-mpv quits.

8. **Removed** the old code in Nadeshiko-do-postponed, that handled jobs
   maintained in a single file. There is nothing to worry about, if you
   updated Nadeshiko and launched Nadeshiko-do-postponed at least once
   since October 2018.




——— v 2.5.11 —————————————————————————————————————————————————————————————————
                                                          Nadeshiko-mpv 2.3.16

1. Update for Bahelite-2.15, that should also fix #14. Major overhaul
   for the messaging system, bugs may appear.




——— v 2.5.10 —————————————————————————————————————————————————————————————————

1. **Hotfix** for libavformat version dependency.




——— v 2.5.9 ——————————————————————————————————————————————————————————————————

1. **Bugfix:** a call to a non-code-issuing msg function like `info` or `warn`,
   occurring inside `__msg()` would overwrite the variable `msgtype` leading
   to a situation when the execution returns back to `err() → __msg()`, the
   message type will be set wrong and `__msg()` won’t return with a non-zero
   exit code like it should to stop the execution of the main script in `err()`.




——— v 2.5.8 ——————————————————————————————————————————————————————————————————

1. Minor fixes to console messages.




——— v 2.5.7 ——————————————————————————————————————————————————————————————————
                                                          Nadeshiko-mpv 2.3.15
                                                 Nadeshiko-do-postponed 2.2.12

1. **Bugfix:** Add a check on libavcodec version, and enable values >1 for
   `-auto-alt-ref` only if it would be bigger than 58.39.100.
2. **Makefile** unified and put in the root of the repo. **Ebuild** file
   updated.
3. Bugfix: remove chapter information from the encoded video.
   `-map_metadata -1` wasn’t enough, added `-map_chapters -1`.
4. Bugfix: fix a typo in `declare`, that is executed only when time_stat
   is on.
5. Trivial changes to example.nadeshiko*.rc.sh
6. Make sure to remove ffmpeg2pass-0.log on exit (it was left, if the encode
   happened not in TMPDIR).
7. Update to Bahelite-2.14, that brought
   - better handling of subshell calls – now err() calls can be used safely
     without catching them with `$( … ) || exit $?`. This allowed to improve
     mpv IPC library: now errors from send_command() are shown as simple
     “Protocol error”s, while to the console is printed call stack and
     what the issue with `$mpv_answer` was;
   - all the necessary library functions and variables are now exported
     for subshells;
   - better overridden “set” builtin, which allowed to ditch of the use of
     the internal errexit_off/on;
   - better dependency checking. Now users from Mac or BSD userland will
     get more descriptive errors about grep/sed/coreutils/util-linux.





——— v 2.5.6 ——————————————————————————————————————————————————————————————————

Nadeshiko-do-postponed 2.2.11

1. GUI fix: when there are no postponed jobs, make the button bar smaller
   in height (in this case the Cancel button is hidden, and for only one
   button there’s too much space.)
2. Trivial changes to metadata.xml and nadeshiko.ebuild.




——— v 2.5.1 – 2.5.5 ——————————————————————————————————————————————————————————

1. **Bugfix:** hotfix for sourcing bahelite.sh the new way.
2. **Bugfix:** hotfix for installing exampleconf directory and setting
   MODULESDIR.
3. **Bugfix:** hotfix for misplaced install of exampleconf/* files
4. **Bugfix:** hotfix for sourcing bahelite_github MYDIR/lib → LIBDIR.
5. Add more logging hooks just in case.




——— v 2.5 ————————————————————————————————————————————————————————————————————

Nadeshiko-mpv 2.3.13

1. **New feature:** Updated bahelite_directories module, this is a step toward
   installation with Makefiles.
2. A new Makefile added.
3. Gentoo ebuild is added with all runtime dependencies. It is available
   in ::deter overlay. Package builders may use the ebuild to provide
   packages for other distributions.
4. Bugfix: Made Python GUI path use MODULESDIR instead of MYDIR/modules.




——— v 2.4.2 ——————————————————————————————————————————————————————————————————

1. **Update for libvpx-1.8.0:** -auto-alt-ref now accepts values up to 6 (for-
   mely it was 0 or 1).

   If a value higher than 1 would be used, and the system libvpx would happen
   to be lower than 1.8.0, Nadeshiko will print a warning and drop the value
   to 1.

   RC file update is advised for those who have updated their libvpx to 1.8.0.

   For those in doubt, Nadeshiko wiki has a page dedicated to testing
   libvpx 1.8.0: https://git.io/fhNWz

2. Updated README.md with a link to Crash course page.
   Check it out! https://git.io/fhNWg

3. The wiki now has a tip about RC files: how they work and what tricks
   you can do with them to keep your config file(s) small.
   https://git.io/fhNWa

4. Updated the versioning module in Bahelite.

5. Rearranged code in libvpx-vp9 encoding module.




——— v 2.4.1 ——————————————————————————————————————————————————————————————————

Nadeshiko-mpv 2.3.11

1. **Bugfix:** force mpv running previews to launch in unpaused state.
   The bug seems to have appeared in the newer mpv.




——— v 2.4 ————————————————————————————————————————————————————————————————————

Nadeshiko-mpv 2.3.10
Nadeshiko-do-postponed 2.2.8

1. Switched hardsubbing filter from “subtitle” to “ass”. This allows to use
   better font rendering, e.g. enabling ligatures, kerning and other features.
   https://git.io/fhbtC
   Sadly, the “ass” filter doesn’t recognise option “forced_style”, so for
   rendering styleless subtitles (SubRip and VTT), the old “subtitles” filter
   is used.
2. Update for Bahelite 2.13.
3. Nadeshiko-do-postponed: fix singular/plural discrepancy in the window text.




——— v 2.3.22 —————————————————————————————————————————————————————————————————

1. **Bugfix:** Main script now should receive signals like SIGINT.
2. **Bugfix:** Display messages for catching TERM/INT/HUP/PIPE signals.
3. Nadeshiko-mpv will include full dryrun log of Nadeshiko – now there is
   no need to open several files.
4. Nadeshiko-mpv and Nadeshiko-do-postponed now write their version
   to log file.
5. Improved description for ffmpeg_pix_fmt in example.nadeshiko.rc.sh.
6. Fixed collisions in message indentation levels, when Nadeshiko runs
   within Nadeshiko-mpv.




——— v 2.3.21 —————————————————————————————————————————————————————————————————

1. **Improvement:** Nadeshiko-do-postponed will now report, if there are
   failed jobs left. (Failed jobs are never encoded again, you’ll have
   to copy their job files back to postponed_commands_dir.)
   Also the interface now differentiates between singular and plural forms.
2. Decreased log verbosity for RC including stage (now by default it will
   print info only on the warning level or above).
3. The code determining scene complexity now uses -to <timestamp> method
   of specifying end time.
4. Fixed colour that was not added for error messages to console.




——— v 2.3.20 —————————————————————————————————————————————————————————————————

1. **Bugfix:** improved stability by stripping user functions from the envi-
   ronment, which caused spontaneous bugs. Nadeshiko-mpv and Nadeshiko-do-
   postponed now run in a totally clean environment.
2. **Bugfix:** changed the method of passing the end time to ffmpeg:
   -t <duration> didn’t always guarantee that the clip will end precisely
   where it told to end. Now instead of -t <duration> is used -to <timestamp>.
   This, however, caused problems on certain versions of FFmpeg prior to 4.0,
   so the dependencies are now updated accordingly (to 56/58/58).
3. **Cleaning:** source file metadata now don’t go to the output file. This
   caused confusion, as it left information about chapters and the encoder
   of the source file.
4. Fixed RC-related messages to console.
5. Nadeshiko log is now distinctively indented within Nadeshiko-mpv log,
   also a minor bug fixed in nadeshiko-mpv.sh related to reading the dryrun
   log of nadeshiko.sh.




——— v 2.3.19 —————————————————————————————————————————————————————————————————

1. Update to newer bahelite, modularised more and pulling less dependencies.

Nadeshiko-mpv 2.3.6

2. **Bugfix:** solved an error on the first run, when Nadeshiko-mpv complained
   about non-existing RC file for Nadeshiko. Now backend RC and example RC
   files are prepared beforehand, and the first run goes smoothly.




——— v 2.3.18 —————————————————————————————————————————————————————————————————

Nadeshiko-do-postponed 2.2.3

1. **Bugfix:** add the definition of $xml to Nadeshiko-do-postponed, the
   lack of which caused a crash since it has been moved from xml_and_python_
   funcs library.




——— v 2.3.17 —————————————————————————————————————————————————————————————————

Nadeshiko-mpv 2.3.5

1. Changed the hint for the “later” checkbox, that’s next to “Encode” button.
2. **Bugfix:** Fixed xml_and_python_funcs lib trying to set $xml before
   xmlstarlet wis checked for being present among other dependencies.




——— v 2.3.16 —————————————————————————————————————————————————————————————————

Nadeshiko 2.3.16
Nadeshiko-mpv 2.3.4
Nadeshiko-do-postponed 2.2.2

1. Bahelite modules are now cherrypicked.
2. **Bugfix:** check_for_updates config option now controls sourcing
   the bahelite_github.sh module. Set the option to “no” and the dependencies
   to wget and xdg-open, which annoyed some, will be no more.
3. Removed mpv-crop-script_installer.lua, as the development went another
   way and it turned out to be not needed.




——— v 2.3.15 —————————————————————————————————————————————————————————————————

Nadeshiko-2.3.15

1. **Bugfix:** Fixed `single_process_check()` in bahelite, that failed with
   an error if nadeshiko-mpv was used with an argument, while no other nadeshi-
   ko process was running.
2. Cleaned descriptions example.nadeshiko.rc.sh from old stuff, added
   a couple of links to the wiki, when suitable.




——— v 2.3.14 —————————————————————————————————————————————————————————————————

Nadeshiko-2.3.14

1. **Bugfix:** Updated `rcfile_minver` as it should point to v2.2.4
   and make people update their configs.




——— v 2.3.13 —————————————————————————————————————————————————————————————————

Nadeshiko-2.3.13

1. Removed overridden “read”, that caused a bug in reading streams
   (extra line appeared and made certain parts of code fail. One example is
   font extraction, that has seen an empty attachment ID and quit with
   an error).




——— v 2.3.12 —————————————————————————————————————————————————————————————————

Nadeshiko-2.3.12

1. Missing utils will now print a short information about how they
   can be found and a link to the project. (Important only for new
   users.)




——— v 2.3.11 —————————————————————————————————————————————————————————————————

Nadeshiko-2.3.11

1. Dummy update, because v. 2.3.10 didn’t have a “v” in the tag and broke
   updates for people.




——— v 2.3.10 —————————————————————————————————————————————————————————————————

Nadeshiko-2.3.10

1. Added a check on mimetype binary.




——— v 2.3.9 ——————————————————————————————————————————————————————————————————

Nadeshiko-2.3.9

1. Fixed a couple of minor bugs in bahelite
2. Edited several descriptions in example.nadeshiko.rc.sh




——— v 2.3.8 ——————————————————————————————————————————————————————————————————

Nadeshiko-do-postponed-2.2.1

1. Fixed a bug on log file copying, when failed jobs dir wasn’t empty.




——— v 2.3.7 ——————————————————————————————————————————————————————————————————

Nadeshiko-2.3.7

1. Changed defaults for the RC option ffmpeg_subtitle_fallback_style
   in the example.nadeshiko.rc.sh


Nadeshiko-mpv-2.3.3

1. Fixed Tab key not working in dialogues for socket selection and in
   choosing preset / picking size.


Nadeshiko-do-postponed-2.2

1. Added confirmation dialogue at startup.

   This is to avoid accidentally running postponed jobs,
   e.g. when nadeshiko-mpv.sh  and nadeshiko-do-postponed.sh  are bound
   to close hotkeys and these hotkeys may be sometimes confused.

   Now Nadeshiko-do-postponed can be launched freely just to check, if there
   are any jobs. The dialogue will show up only when nadeshiko-do-postponed.sh
   is launched from within an X session (if DISPLAY is set), thus it shouldn’t
   break any cron jobs.




——— v 2.3.6 ——————————————————————————————————————————————————————————————————

Fixed the realpath sourcing in v2.3.5 (still needs dirname).




——— v 2.3.5 ——————————————————————————————————————————————————————————————————

Changed the code sourcing Bahelite to use realpath in all three Nadeshiko
  scripts.




——— v 2.3.4 ——————————————————————————————————————————————————————————————————

Nadeshiko-2.3.4

1. Fixed RC not loading and giving an error on the new bash-4.4.23.
  (Actually a bug in bahelite).
2. Makefile thanks to RX14.
3. Minor fixes related to code style.




——— v 2.3.3 ——————————————————————————————————————————————————————————————————

Nadeshiko-mpv-2.3.1

1. Fixed a bug in mpv_ipc.sh – number values in mpv’s cursor-autohide property
   weren’t considered as a valid value.




——— v 2.3.2 ——————————————————————————————————————————————————————————————————

Nadeshiko-do-postponed-2.1.3

1. Fixed more bash errors.




——— v 2.3.1 ——————————————————————————————————————————————————————————————————

Nadeshiko-do-postponed-2.1.2

1. Fixed bash errors.




——— v 2.3 ————————————————————————————————————————————————————————————————————


Nadeshiko-2.3

1. New command line option: force_scene_complexity

   On the wiki: https://git.io/fxK9I

2. New command line option: dryrun

   On the wiki: https://git.io/fxK9L

3. Bitrate-resolution profile native to the source video is now printed
   to console and log.

4. Fixed a bug, when Nadeshiko couldn’t encode a video, because the built-in
   cover was the default video stream. Now only real video streams
   will be used.



Nadeshiko-mpv-2.3

1. New feature: predictor

   Read the new article on the wiki: https://git.io/fxKyc

2. Preset configuration in nadeshiko-mpv.rc.sh changed: now profiles have
   names for displaying too (sockets already had them). This way config
   file name may stay long (nadeshiko-something-something.rc.sh), and when
   displayed in the Nadehsiko-mpv GUI, it will be just “H.264” or “VP9”.
   Isn’t it cool?

   The tip about setting up with Multiple presets was updated
   on the wiki: https://git.io/fx3Qr

3. New config option: gui_default_preset

   It chooses, which preset should be opened in the GUI by default,
   if there are several presets.

4. New config option: predictor

   Enables or disables the predictor.

5. New config option: run_predictor_only_for_sizes

   Which maximal file sizes the predictor should use (file sizes not mentioned
   in that list will be skipped to save time).

6. Xdialog and kdialog support removed. Hence config option “dialog” was
   removed too. Gtk windows are now the only ones, that will be developed.

   show_name_setting_dialog config option was removed, as it had meaning
   only for “dialog=kdialog” setting.

7. New feature and module: cropping

   Nadeshiko-mpv can now load TheAMM’s mpv_crop_script in runtime, so it is
   possible to crop videos from Nadeshiko-mpv!

   You may have one problem, though: https://git.io/fxKSC

8. Improved socket checks in mpv_ipc.sh

9. Python Gtk dependency bumped to v3.12.

10. GUI: config selection merged with the last window.

11. GUI: damn big redraw.

12. GUI: moved the functions working with xml and python
    into a separate library.

13. GUI: improved generating python code, now based on placeholders,
    pretty unified.

14. GUI: better focus control (first tab activates first element)
    This is not ideal, but the best that could done with Glade
    and Python GObject.

15. GUI: reworked automatic generation of elements in XML and Python.

16. Unified data passing from and to dialogues. Creating a new frontend
    would now be even simpler than with Xdialog/kdialog.

17. Thorough error handling for cropping module: running module’s own
    on_error() to tidy up and moving dryrun logs to LOGDIR. (Normally dry run
    logs are placed in TMPDIR and discarded.)

18. Updated --help output. Now it’s shorter and has links to wiki
    and bug tracker.

19. Preset checks.

20. When Nadeshiko-mpv runs preview and encoded files in mpv, they now use
    now use sound volume of the main mpv. For certain videos previews were
    too loud.

21. Rewinding the video a couple of seconds back on pause is now disabled.
    If you still need it, add in nadeshiko-mpv.rc.sh this line:

    rewind_back_on_leaving_fullscreen=t



Nadeshiko-do-postponed-2.1.1

1. Failed jobs are now moved along with the encoding log files.

2. Logs and job files of failed runs are now placed under
   $HOME/.cache/nadeshiko/postponed_commands_dir/failed/
   (Earlier the logs were placed in
   $HOME/.cache/nadeshiko/logs/postponed_failures/)

3. Groundwork for creating a GUI, aims are:
   - at the start, show how many jobs there is (or show, that there are
     no jobs);
   - do not run the jobs, ask first. This will allow to use the command
     just to see, how many jobs there is;
   - show a progressbar on processing jobs;
   - show a window, when the jobs are complete with statistics, how many
     are encoded well, and how many failed (if any).



Bahelite update

1. Fixed the colours, that were lost in subshells.

2. Fixed silent failures, when local on_error() wasn’t called, because
   subshell return code >0 was passes to || exit $?, and the exit this way
   was considered “clean”. Now errors are processed, backtraces are printed
   to logs and error messages are shown.

3. Added a check for a mountpoint on cleaning TMPDIR.

4. Fixed the code checking for updates on Github. Now only a notification
   will be shown.

5. More characters are allowed in RC file name: . , : ;




——— v 2.2.4 ——————————————————————————————————————————————————————————————————

Nadeshiko-2.2.4

1. Added -nostdin to default ffmpeg options. Update your configs!

2. determine_scene_complexity now uses common ffmpeg option set.




——— v 2.2.3 ——————————————————————————————————————————————————————————————————

Nadeshiko-mpv-2.2.2

1. Fixed crash, that happened without postpone.

2. With “postpone” passed via command line gtk GUI will have it force-enabled.



——— v 2.2.2 ——————————————————————————————————————————————————————————————————


Nadeshiko-2.2.2

1. Fixed release notes link.


Nadeshiko-mpv-2.2.1

2. Fixed bug with “postpone” parameter leading to a crash.

3. Fixed potential issue with playing filename not being written to mpv
   data file.

4. Replaced xmlstarlet dependency for binary name (xml → xmlstarlet),
   as apparently, xml symlink is not present everywhere.




——— v 2.2.1 ——————————————————————————————————————————————————————————————————

Nadeshiko-2.2.1

1. Fixed the bug with encoding entire video, when Time2 wouldn’t get assigned
   as video duration.




——— v 2.2 ————————————————————————————————————————————————————————————————————


Nadeshiko-2.2

1. NEW: ffmpeg_subtitle_fallback_style config option.
   Now you can nicely render SubRip or VTT subs, that have no embedded style.
   Before: https://i.imgur.com/nkdjHgb.jpg
   After: https://i.imgur.com/1DiUAKD.jpg

   What, you do not download Kaguya Luna videos from Youtube? What if she
   marries someone and deletes her videos?

2. Added check for an external encoding function.

3. Removed rudiments of max_size_default being not a link to another variable.


Nadeshiko-mpv-2.2

4. NEW: dialog=gtk config option.
   Better GUI, close to perfect.
   Requirements:
   - python3 with Gtk module 3.0.
   - >=GTK+3.12 in the OS

5. Postponed jobs are now separately put in a new directory,
   “postponed_commands” *file* is deprecated. Jobs now go
   in “postponed_commands_dir”. See also № 9

6. Fixed asking second time for mpv socket.

7. Split dialogues into separate files.

8. Added a check to not run together with Nadeshiko-do-postponed
   (the latter might get wrong log file).


Nadeshiko-do-postponed-2.1

9. Postponed jobs are separated and job files placed into a new directory.
   Old jobs in a single file are still supported and will be processed.

   Now each job is a separate file named after the original video,
   and everything inside is escaped for bash. Having each job in a separate
   file allows for better control:
     a) before, when all jobs were in a single file, this file could be
        cleared only when all of them complete successfully. This could poten-
        tially lead to some jobs being reencoded run after run, if some fifth
        job would turn out unencodable. Now once a job is completed –
        no matter with a good or bad result – its job file is *deleted*,
        but if it completed with a bad result, its log file is copied
        to $LOGDIR/postponed_failures;
     b) this simplifies writing and executing the postponed jobs, there would
        be less possible errors.

10. Added check for simultaneously running processes.




——— v 2.1.3  —————————————————————————————————————————————————————————————————

Nadeshiko-mpv-2.1.1

1. Fixed an error with videos not having any audio track, that prevented these
   files from being encoded.




——— v 2.1.2  —————————————————————————————————————————————————————————————————

Nadeshiko-2.1.2

1. Fixed bug with custom sizes “tiny”, “small”, “normal”… not applying.

Minor imrovements for Nadeshiko-mpv logging.




——— v 2.1.1  —————————————————————————————————————————————————————————————————

1. Keeping an entire config is not necessary any more – it may contain only
   overrides.


Nadeshiko-2.1.1

2. Fixed a bug with one type of SubRip subtitles not being recognised
3. Fixed another bug with external subtitles not being added properly.
4. Fixed overly verbose output for the ffmpeg instance, that does
   subtitle conversion.
5. Fixed a bug when audio track didn’t add, because subtitles were turned off.


Nadeshiko-mpv-2.1

6. Added support for kdialog in parallel to Xdialog. Update the configuration
   file!
   Why the choice didn’t fall upon zenity read the new entry in the wiki:
   https://github.com/deterenkelt/Nadeshiko/wiki/Known-issues-for-Nadeshiko%E2%80%91mpv#----xdialog--kdialog-problems
7. Fixed a bug in preview playback, due to which external subtitles
   weren’t shown on the preview (but still rendered on the encoded video).




——— v 2.1  ———————————————————————————————————————————————————————————————————


Nadeshiko-2.1

1. Added centering of overlay subtitles which dimensions mismatch
   with video.


Nadeshiko-mpv-2.0.1

2. Since --ff-sid and --ff-aid are found to be broken for E-D releases,
   preview mpv now uses --sid and --aid again.
3. Fixed bug when removed nadeshiko.rc.sh prevented Nadeshiko-mpv from run-
   ning.




——— v 2.0.1  —————————————————————————————————————————————————————————————————


Nadeshiko-2.0.1

Hotfix for `create_windows_friendly_filenames` config option.




——— v 2.0  ———————————————————————————————————————————————————————————————————


1. Configuration, logs and temporary files moved to user’s home directory.
2. RC files format changed, it became more user-friendly with options
   taking “yes” or “no” and bash-specific declarations moved from there
   to their respective scripts.
3. Changed dependency from bhlls.sh to bahelite.sh for bugfixes
   and better error handling, RC files, logs etc.
4. Proper versioning for Nadeshiko, Nadeshiko-mpv and their RC files.
5. Nadeshiko and Nadeshiko-mpv can add a prefix to file name.


Nadeshiko

6. Better FFmpeg compatibility checks – now works with older, stable FFmpeg.
7. WebVTT/SRT, VobSub and PGS subtitles support.
8. External subtitles support for ASS and SRT/WebVTT.
9. Internal check for updates.
10. Encoding modules are taken into separate files, so that
   they served as examples for other codecs (e.g. hardware ones).
11. Time1 and Time2 are now optional parameters.
12. Audio track can be selected. (Before only the default track worked.)
13. max_size_default is now a link to one of the predefined sizes,
    i.e. “normal”, “small”, “tiny” or “unlimited”.
14. Writing metadata to containers.
15. Subtitle and fonts are prepared earlier, so if an error happens on this
    stage, one could notice it faster.
16. Processing of Time and Time2 is reworked and draws closer the time, when
    it would be possible to set multiple time marks and encode a video from
    several fragments.
17. Nadeshiko determines scene complexity.
18. Refactored the code finding optimal bitrate and resolution.
19. Better handling of overshooting.
20. Cleaned work with FFmpeg filters from unnecessary stuff: subtitles and
    fonts processing moved to preparation, this allowed to handle overlaying
    and allow for burning VobSub and PGS.
21. Refactored encoding modules, unified 1 and 2 pass, added more variables.
22. Added more codec-specific variables in the RC file, with descriptions.
23. Added the ability to add custom output options for 1 and 2 passes
    for both libx264 and libvpx-vp9.
24. Can strip “:” and other characters to create Windows-friendly filenames.


Nadeshiko-mpv

25. Menu choosing file sizes uses real values, default value isn’t present,
    added as a mark instead.
26. Can choose presets (nadeshiko.sh configuration files).
27. IPC code moved to separate library.
28. Multiple mpv sockets can be monitored.
29. Better handling of running preview windows with mpv, including the cases,
    when mpv runs in fullscreen.


Bugs fixed

1. VP9 tuning settings are reworked, and now using it provides more or less
   predictable behaviour.
2. Incorrectly passed format for Time1 and Time2 fixed.
3. Fixed several issues with conflicting settings.
4. Fixed wrong `${newarr[total_s]}` due to `$ms` not being converted properly.
5. Nadeshiko-mpv handles errors better, duplicate errors removed.


26 September 2018