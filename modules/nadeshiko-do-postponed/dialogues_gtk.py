#! /usr/bin/env python3

#  dialogues_gtk.py
#  Nadeshiko-do-postponed dialogues implemented in Python.
#  © deterenkelt 2018
#
#  For licence see nadeshiko.sh
#

 # .py and .glade files are copied to TMPDIR
#  and prepared by nadeshiko-do-postponed_dialogues_gtk.sh
#
#  $1 – "startpage=STACK1_CHILD_OBJECT"
#  stack1 has these children:
#    - gtkbox_launch_jobs
#    - gtkbox_no_jobs
#    - … (others are not ready yet)
#

 # Such lines like “###  PLACEHOLDER FOR …  ###”  are to be replaced
#  with autogenerated code. This adds code blocks for the elements,
#  the count of which may vary depending on the user’s configuration.
#

 # Expected exit codes
#  1 – Python code error
#  2 – GTK not available
#  3 – Startpage command line argument was not passed.
#  4 – Cancelled by user
#  127 – env couldn’t find interpreter.
#  137 – killed
#


try:
	import sys, gi
	gi.require_version('Gtk', '3.0')
	from gi.repository import Gtk
except:
	print('GTK not available')
	sys.exit(2)


if len(sys.argv) == 1:
	print ('Pass startpage! ')
	print ('Example: startpage=STACK1_CHILD_OBJECT')
	sys.exit(3)

startpage = sys.argv[1]
startpage = startpage[10:]
# print (startpage);
# sys.exit (88)

# print(sys.version)

class Nadeshiko_do_postponed_dialogues:

	def __init__ (self):
		builder = Gtk.Builder()
		builder.add_from_file('dialogues_gtk.glade')
		builder.connect_signals(self)
		self.window = builder.get_object('window1')
		self.window.set_resizable(False)
		self.stack = builder.get_object('stack1')
		self.startpage = builder.get_object(startpage)
		self.stack.set_visible_child(self.startpage)
		self.window.show_all()

	def on_window_destroy(self, object, data=None):
		Gtk.main_quit()
		sys.exit(0)

	def on_launch_jobs_ok1_but_click(self, widget, *args):
		print ('run_jobs')
		Gtk.main_quit()
		sys.exit(0)

	#  Cancel with a cancel button.
	#  Not using on_window_destroy, for it will cancel with exit code 4
	#  and then trigger notify-send message with “Cancelled” whic would
	#  look superfluous.
	def on_launch_jobs_cancel_but_click(self, widget, *args):
		print ('do_not_run_jobs')
		Gtk.main_quit()
		sys.exit(0)


def main():
    app = Nadeshiko_do_postponed_dialogues()
    Gtk.main()


if __name__ == "__main__":
    sys.exit(main())